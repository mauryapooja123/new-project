{"ast":null,"code":"var _jsxFileName = \"/home/webxpert/New_Project/front/src/models/CourseAddModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport IndianStates from \"../config/indianStates.json\";\nimport States from \"../config/state.json\";\nimport * as copyCourseServices from \"../services/copyCourseServices\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseAddModal = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    show,\n    getCoursePaginationData,\n    edit,\n    courseData,\n    setCourseData,\n    setActivePage\n  } = _ref;\n  const [courseState, setCourseState] = useState([]);\n  const [err, setErr] = useState({});\n  const [addNewCourse, setAddNewCourse] = useState({\n    state: \"\",\n    title: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAddNewCourse({ ...addNewCourse,\n      [name]: value\n    });\n    setCourseData({ ...courseData,\n      [name]: value\n    });\n  };\n\n  const validation = () => {\n    let error = {};\n    let valid = true;\n    const {\n      state,\n      title\n    } = addNewCourse;\n\n    if (!state || state.trim() === \"\") {\n      valid = false;\n      error[\"state\"] = \"cannot be empty\";\n    }\n\n    if (!title) {\n      valid = false;\n      error[\"title\"] = \"cannot be empty\";\n    }\n\n    setErr(error);\n    return valid;\n  };\n\n  const handleSubmit = () => {\n    if (validation()) {\n      copyCourseServices.addNewCourse(addNewCourse);\n      handleClose();\n      getCoursePaginationData();\n      setActivePage(1);\n      setAddNewCourse({\n        state: \"\",\n        title: \"\"\n      });\n    }\n  };\n\n  const handleUpdate = () => {\n    const id = courseData._id;\n    copyCourseServices.editRecord(id, courseData);\n    getCoursePaginationData();\n    handleClose();\n  };\n\n  const closeFunc = () => {\n    handleClose(setAddNewCourse({\n      title: \"\",\n      state: \"\"\n    }));\n  };\n\n  useEffect(() => {\n    setCourseState(States.states);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: edit && edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Edit details..\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Add course title\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              onChange: handleChange,\n              name: \"state\",\n              value: edit && edit ? courseData.state : addNewCourse.state,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"select course state\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), courseState && courseState.length > 0 && courseState.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: state.name\n              }, state.abbreviation, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: err.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"title\",\n              onChange: handleChange,\n              name: \"title\",\n              value: edit && edit ? courseData.title : addNewCourse.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: err.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeFunc,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: edit && edit ? handleUpdate : handleSubmit,\n          children: edit && edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Update\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Add\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CourseAddModal, \"8yXqGWmJw9VelhhXvDKJI1d3m4E=\");\n\n_c = CourseAddModal;\nexport default CourseAddModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseAddModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","IndianStates","States","copyCourseServices","CourseAddModal","handleClose","show","getCoursePaginationData","edit","courseData","setCourseData","setActivePage","courseState","setCourseState","err","setErr","addNewCourse","setAddNewCourse","state","title","handleChange","e","name","value","target","validation","error","valid","trim","handleSubmit","handleUpdate","id","_id","editRecord","closeFunc","states","length","map","abbreviation","color"],"sources":["/home/webxpert/New_Project/front/src/models/CourseAddModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport IndianStates from \"../config/indianStates.json\";\nimport States from \"../config/state.json\"\nimport * as copyCourseServices from \"../services/copyCourseServices\";\nconst CourseAddModal = ({\n  handleClose,\n  show,\n  getCoursePaginationData,\n  edit,\n  courseData,\n  setCourseData,\n  setActivePage,\n}) => {\n  const [courseState, setCourseState] = useState([]);\n  const [err, setErr] = useState({});\n  const [addNewCourse, setAddNewCourse] = useState({\n    state: \"\",\n    title: \"\",\n  });\n      \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setAddNewCourse({\n      ...addNewCourse,\n      [name]: value,\n    });\n    setCourseData({\n      ...courseData,\n      [name]: value,\n    });\n  };\n  const validation = () => {\n    let error = {};\n    let valid = true;\n    const { state, title } = addNewCourse;\n    if (!state || state.trim() === \"\") {\n      valid = false;\n      error[\"state\"] = \"cannot be empty\";\n    }\n\n    if (!title) {\n      valid = false;\n      error[\"title\"] = \"cannot be empty\";\n    }\n    setErr(error);\n    return valid;\n  };\n  const handleSubmit = () => {\n    if (validation()) {\n      copyCourseServices.addNewCourse(addNewCourse);\n      handleClose();\n      getCoursePaginationData();\n      setActivePage(1)\n      setAddNewCourse({\n        state: \"\",\n        title: \"\",\n    })\n    }\n  };\n  const handleUpdate = () => {\n    const id = courseData._id;\n    copyCourseServices.editRecord(id, courseData);\n    getCoursePaginationData();\n    handleClose();\n  };\n  const closeFunc =()  =>{\n      handleClose(\n          setAddNewCourse({\n              title:\"\",\n              state:\"\"\n          })\n      )\n  }\n  useEffect(() => {\n    setCourseState(States.states);\n  }, []);\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {edit && edit ? <>Edit details..</> : <>Add course title</>}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Course State</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                name=\"state\"\n                value={edit && edit ? courseData.state : addNewCourse.state}\n              >\n                <option>select course state</option>\n                {courseState &&\n                  courseState.length > 0 &&\n                  courseState.map((state) => (\n                    <option key={state.abbreviation}>{state.name}</option>\n                  ))}\n              </Form.Control>\n              {err && <p style={{ color: \"red\" }}>{err.state}</p>}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"title\"\n                onChange={handleChange}\n                name=\"title\"\n                value={edit && edit ? courseData.title : addNewCourse.title}\n              />\n              {err && <p style={{ color: \"red\" }}>{err.title}</p>}\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={closeFunc}>Close</Button>\n          <Button onClick={edit && edit ? handleUpdate : handleSubmit}>\n            {edit && edit ? <>Update</> : <>Add</>}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CourseAddModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}