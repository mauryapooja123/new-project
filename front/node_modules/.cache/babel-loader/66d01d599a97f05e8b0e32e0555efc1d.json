{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import { Modal, Button } from \"react-bootstrap\";\n// import * as courseModuleService from \"../../services/courseModule\";\n// import _ from \"lodash\";\n// import { createNotification } from \"../../helper/notification\";\n// import { ToastContainer } from \"react-toastify\";\n// import stateJson from \"../../config/state.json\";\n// export const AddCourseModule = (props) => {\n//   const [courseoptions, setCourseoptions] = useState([]);\n//   const [show, setShow] = useState(false);\n//   const [addModule, setAddModule] = useState({\n//     state: \"\",\n//     title: \"\",\n//     orderNo: \"\",\n//     courseId: \"\",\n//   });\n//   const [error, setError] = useState([]);\n//   const [courseState, setCourseState] = useState([]);\n//   const [stateTitle, setStateTitle] = useState([]);\n//   useEffect(() => {\n//     setCourseState(stateJson.states);\n//   }, []);\n//   useEffect(() => {\n//     getCourse();\n//   }, []);\n//   const formValidation = () => {\n//     const { state, title, courseId, orderNo } = addModule;\n//     let formErrors = {};\n//     let isValid = true;\n//     if (!state) {\n//       isValid = false;\n//       formErrors[\"state\"] = \"Please select state\";\n//     }\n//     if (!title) {\n//       isValid = false;\n//       formErrors[\"title\"] = \"Please select title\";\n//     }\n//     if (!courseId) {\n//       isValid = false;\n//       formErrors[\"courseId\"] = \"Please select courseId\";\n//     }\n//     if (!orderNo) {\n//       isValid = false;\n//       formErrors[\"orderNo\"] = \"Please select orderNo\";\n//     }\n//     setError(formErrors);\n//     return isValid;\n//   };\n//   const clickHandleModule = async (e) => {\n//     if (formValidation()) {\n//       try {\n//         const courseModule = {\n//           courseTitle: addModule.courseTitle,\n//           state: addModule.state,\n//           title: addModule.title,\n//           orderNo: addModule.orderNo,\n//           courseId: addModule.courseId,\n//         };\n//         // console.log(courseModule, \"courseModule\");\n//         const response = await courseModuleService.addCourseModule(\n//           courseModule\n//         );\n//         if (response.status === 400) {\n//           createNotification(\"error\", response.message);\n//           props.modalStatus();\n//         } else {\n//           createNotification(\"success\", response.message);\n//           setShow(false);\n//           props.modalStatus();\n//           setAddModule(\"\");\n//         }\n//       } catch (err) {\n//         console.log(err.message);\n//       }\n//     }\n//   };\n//   const handleShow = () => setShow(true);\n//   const handleCloseOnCloseButton = () => {\n//     setShow(false);\n//     setAddModule(\"\");\n//   };\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     // console.log(value, \"vallllllllllllll\");\n//     setAddModule({\n//       ...addModule,\n//       [name]: value,\n//     });\n//     if (name === \"state\") {\n//       getCourseTitle(value);\n//     }\n//   };\n//   const getCourse = async () => {\n//     const response = await courseModuleService.getAll();\n//     setCourseoptions(response.data.data);\n//   };\n//   const getCourseTitle = async (state) => {\n//     const response = await courseModuleService.getTitleByState(state);\n//     // console.log(response, \"response of title by state api\");\n//     setStateTitle(response.data.data);\n//   };\n//   // console.log(stateTitle, \"state title\");\n//   return (\n//     <div>\n//       <Button variant=\"info\" onClick={handleShow}>\n//         Add Course Module\n//       </Button>\n//       {/* <Modal show={show} onHide={handleCloseOnCloseButton}>\n//         <Modal.Header>\n//           <Modal.Title>Add Course Module</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <div className=\"popup-form-box\">\n//             <div className=\"form-filed_course\">\n//               <label>Course State</label>\n//               <select\n//                 className=\"input1\"\n//                 name=\"state\"\n//                 value={addModule.state}\n//                 onChange={handleChange}\n//               >\n//                 <option value=\"\">Select Course State</option>\n//                 {courseState &&\n//                   courseState.length > 0 &&\n//                   courseState.map((item) => (\n//                     <option key={item.name} value={item.state}>\n//                       {item.name}\n//                     </option>\n//                   ))}\n//               </select>\n//               <span className=\"form-error\">{error.state}</span>\n//             </div>\n//             <div className=\"form-filed_course\">\n//               <label>Course Title</label>\n//               <select\n//                 className=\"input1\"\n//                 name=\"courseId\"\n//                 value={addModule.courseId}\n//                 onChange={handleChange}\n//               >\n//                 <option value=\"\">Select Course Title</option>\n//                 {stateTitle &&\n//                   stateTitle.length > 0 &&\n//                   stateTitle.map((item) => (\n//                     <option key={item._id} value={item._id}>\n//                       {item.title}\n//                     </option>\n//                   ))}\n//               </select>\n//               <span className=\"form-error\">{error.courseId}</span>\n//             </div>\n//             <div className=\"form-filed_course\">\n//               <label>Module Title</label>\n//               <input\n//                 className=\"input1\"\n//                 type=\"text\"\n//                 name=\"title\"\n//                 placeholder=\"Module Title\"\n//                 value={addModule.title}\n//                 onChange={handleChange}\n//               />\n//               <span className=\"form-error\">{error.title}</span>\n//             </div>\n//             <div className=\"form-filed_course\">\n//               <label>Order Number</label>\n//               <input\n//                 className=\"input1\"\n//                 type=\"number\"\n//                 name=\"orderNo\"\n//                 placeholder=\"orderNo\"\n//                 value={addModule.orderNo}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <span className=\"form-error\">{error.orderNo}</span>\n//           </div>\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleCloseOnCloseButton}>\n//             Close\n//           </Button>\n//           <Button type=\"submit\" variant=\"primary\" onClick={clickHandleModule}>\n//             Add\n//           </Button>\n//         </Modal.Footer>\n//       </Modal> */}\n//       <ToastContainer autoClose={3000} />\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["/home/webxpert/New_Project/front/src/models/courseModule/AddModule.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { Modal, Button } from \"react-bootstrap\";\r\n// import * as courseModuleService from \"../../services/courseModule\";\r\n// import _ from \"lodash\";\r\n// import { createNotification } from \"../../helper/notification\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import stateJson from \"../../config/state.json\";\r\n\r\n// export const AddCourseModule = (props) => {\r\n//   const [courseoptions, setCourseoptions] = useState([]);\r\n//   const [show, setShow] = useState(false);\r\n//   const [addModule, setAddModule] = useState({\r\n//     state: \"\",\r\n//     title: \"\",\r\n//     orderNo: \"\",\r\n//     courseId: \"\",\r\n//   });\r\n//   const [error, setError] = useState([]);\r\n//   const [courseState, setCourseState] = useState([]);\r\n//   const [stateTitle, setStateTitle] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     setCourseState(stateJson.states);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     getCourse();\r\n//   }, []);\r\n\r\n//   const formValidation = () => {\r\n//     const { state, title, courseId, orderNo } = addModule;\r\n//     let formErrors = {};\r\n//     let isValid = true;\r\n//     if (!state) {\r\n//       isValid = false;\r\n//       formErrors[\"state\"] = \"Please select state\";\r\n//     }\r\n//     if (!title) {\r\n//       isValid = false;\r\n//       formErrors[\"title\"] = \"Please select title\";\r\n//     }\r\n//     if (!courseId) {\r\n//       isValid = false;\r\n//       formErrors[\"courseId\"] = \"Please select courseId\";\r\n//     }\r\n//     if (!orderNo) {\r\n//       isValid = false;\r\n//       formErrors[\"orderNo\"] = \"Please select orderNo\";\r\n//     }\r\n//     setError(formErrors);\r\n//     return isValid;\r\n//   };\r\n\r\n//   const clickHandleModule = async (e) => {\r\n//     if (formValidation()) {\r\n//       try {\r\n//         const courseModule = {\r\n//           courseTitle: addModule.courseTitle,\r\n//           state: addModule.state,\r\n//           title: addModule.title,\r\n//           orderNo: addModule.orderNo,\r\n//           courseId: addModule.courseId,\r\n//         };\r\n//         // console.log(courseModule, \"courseModule\");\r\n//         const response = await courseModuleService.addCourseModule(\r\n//           courseModule\r\n//         );\r\n//         if (response.status === 400) {\r\n//           createNotification(\"error\", response.message);\r\n//           props.modalStatus();\r\n//         } else {\r\n//           createNotification(\"success\", response.message);\r\n//           setShow(false);\r\n//           props.modalStatus();\r\n//           setAddModule(\"\");\r\n//         }\r\n//       } catch (err) {\r\n//         console.log(err.message);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleShow = () => setShow(true);\r\n//   const handleCloseOnCloseButton = () => {\r\n//     setShow(false);\r\n//     setAddModule(\"\");\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     // console.log(value, \"vallllllllllllll\");\r\n//     setAddModule({\r\n//       ...addModule,\r\n//       [name]: value,\r\n//     });\r\n//     if (name === \"state\") {\r\n//       getCourseTitle(value);\r\n//     }\r\n//   };\r\n\r\n//   const getCourse = async () => {\r\n//     const response = await courseModuleService.getAll();\r\n//     setCourseoptions(response.data.data);\r\n//   };\r\n//   const getCourseTitle = async (state) => {\r\n//     const response = await courseModuleService.getTitleByState(state);\r\n//     // console.log(response, \"response of title by state api\");\r\n//     setStateTitle(response.data.data);\r\n//   };\r\n//   // console.log(stateTitle, \"state title\");\r\n//   return (\r\n//     <div>\r\n//       <Button variant=\"info\" onClick={handleShow}>\r\n//         Add Course Module\r\n//       </Button>\r\n\r\n//       {/* <Modal show={show} onHide={handleCloseOnCloseButton}>\r\n//         <Modal.Header>\r\n//           <Modal.Title>Add Course Module</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           <div className=\"popup-form-box\">\r\n//             <div className=\"form-filed_course\">\r\n//               <label>Course State</label>\r\n//               <select\r\n//                 className=\"input1\"\r\n//                 name=\"state\"\r\n//                 value={addModule.state}\r\n//                 onChange={handleChange}\r\n//               >\r\n//                 <option value=\"\">Select Course State</option>\r\n\r\n//                 {courseState &&\r\n//                   courseState.length > 0 &&\r\n//                   courseState.map((item) => (\r\n//                     <option key={item.name} value={item.state}>\r\n//                       {item.name}\r\n//                     </option>\r\n//                   ))}\r\n//               </select>\r\n\r\n//               <span className=\"form-error\">{error.state}</span>\r\n//             </div>\r\n//             <div className=\"form-filed_course\">\r\n//               <label>Course Title</label>\r\n//               <select\r\n//                 className=\"input1\"\r\n//                 name=\"courseId\"\r\n//                 value={addModule.courseId}\r\n//                 onChange={handleChange}\r\n//               >\r\n//                 <option value=\"\">Select Course Title</option>\r\n//                 {stateTitle &&\r\n//                   stateTitle.length > 0 &&\r\n//                   stateTitle.map((item) => (\r\n//                     <option key={item._id} value={item._id}>\r\n//                       {item.title}\r\n//                     </option>\r\n//                   ))}\r\n//               </select>\r\n\r\n//               <span className=\"form-error\">{error.courseId}</span>\r\n//             </div>\r\n//             <div className=\"form-filed_course\">\r\n//               <label>Module Title</label>\r\n//               <input\r\n//                 className=\"input1\"\r\n//                 type=\"text\"\r\n//                 name=\"title\"\r\n//                 placeholder=\"Module Title\"\r\n//                 value={addModule.title}\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <span className=\"form-error\">{error.title}</span>\r\n//             </div>\r\n//             <div className=\"form-filed_course\">\r\n//               <label>Order Number</label>\r\n//               <input\r\n//                 className=\"input1\"\r\n//                 type=\"number\"\r\n//                 name=\"orderNo\"\r\n//                 placeholder=\"orderNo\"\r\n//                 value={addModule.orderNo}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </div>\r\n//             <span className=\"form-error\">{error.orderNo}</span>\r\n//           </div>\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={handleCloseOnCloseButton}>\r\n//             Close\r\n//           </Button>\r\n//           <Button type=\"submit\" variant=\"primary\" onClick={clickHandleModule}>\r\n//             Add\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal> */}\r\n//       <ToastContainer autoClose={3000} />\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings},"metadata":{},"sourceType":"module"}