{"ast":null,"code":"import axios from \"axios\";\nimport { apiBaseUrl } from \"../contants/constants\";\nexport const getImage = async (pageNumber, pageLimit) => {\n  try {\n    let token = localStorage.getItem(\"admin_token\");\n    const response = await axios.get(`${apiBaseUrl}/admin/galary/get/${pageNumber}/${pageLimit}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (response.status === 200) {\n      return response;\n    } else {\n      throw new Error(response.message);\n    }\n  } catch (error) {\n    return {\n      status: 400,\n      message: error.message\n    };\n  }\n};\nexport const createSimpleImage = async image => {\n  try {\n    let token = localStorage.getItem(\"admin_token\");\n    const response = await axios.post(`${apiBaseUrl}/admin/galary/createSimpleImage`, image, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      status: 200,\n      message: response.data.message,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      status: 400,\n      message: error.response.data.message\n    };\n  }\n};\nexport const addImage = async image => {\n  try {\n    let token = localStorage.getItem(\"admin_token\");\n    const response = await axios.post(`${apiBaseUrl}/admin/galary/create`, image, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      status: 200,\n      message: response.data.message,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      status: 400,\n      message: error.response.data.message\n    };\n  }\n}; // export const deleteBlog = async (id) => {\n//   try {\n//     let token = localStorage.getItem(\"admin_token\");\n//     const response = await axios.delete(\n//       `${apiBaseUrl}/admin/blog/remove/${id}`,\n//       {\n//         headers: { Authorization: `Bearer ${token}` },\n//       }\n//     );\n//     return response;\n//   } catch (error) {\n//     return {\n//       status: 400,\n//       message: error.message,\n//     };\n//   }\n// };\n// export const getSearchBlog = async (pageNumber, pageLimit, searchValue) => {\n//   try {\n//     let token = localStorage.getItem(\"admin_token\");\n//     const response = await axios.get(\n//       `${apiBaseUrl}/admin/blog/search/${pageNumber}/${pageLimit}/${searchValue}`,\n//       {\n//         headers: { Authorization: `Bearer ${token}` },\n//       }\n//     );\n//     if (response.status === 200) {\n//       return response;\n//     } else {\n//       throw new Error(response.message);\n//     }\n//   } catch (error) {\n//     return {\n//       status: 400,\n//       message: error.message,\n//     };\n//   }\n// };\n// export const getBlogById = async (id) => {\n//   try {\n//     let token = localStorage.getItem(\"admin_token\");\n//     const response = await axios.get(\n//       `${apiBaseUrl}/admin/blog/byId/${id}`,\n//       {\n//         headers: { Authorization: `Bearer ${token}` },\n//       }\n//     );\n//     if (response.status === 200) {\n//       return response;\n//     } else {\n//       throw new Error(response.message);\n//     }\n//   } catch (error) {\n//     return {\n//       status: 400,\n//       message: error.message,\n//       data: \"\",\n//     };\n//   }\n// };\n// export const editBlog = async (id, obj) => {\n//   try {\n//     let token = localStorage.getItem(\"admin_token\");\n//     const response = await axios.put(\n//       `${apiBaseUrl}/admin/blog/edit/${id}`,\n//       obj,\n//       {\n//         headers: { Authorization: `Bearer ${token}` },\n//       }\n//     );\n//     if (response.status === 200) {\n//       return response;\n//     } else {\n//       throw new Error(response.message);\n//     }\n//   } catch (error) {\n//     return {\n//       status: 400,\n//       message: error.message,\n//     };\n//   }\n// };","map":{"version":3,"names":["axios","apiBaseUrl","getImage","pageNumber","pageLimit","token","localStorage","getItem","response","get","headers","Authorization","status","Error","message","error","createSimpleImage","image","post","data","addImage"],"sources":["/home/webxpert/New_Project/front/src/services/galaryService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { apiBaseUrl } from \"../contants/constants\";\r\n\r\nexport const getImage = async (pageNumber, pageLimit) => {\r\n  try {\r\n    let token = localStorage.getItem(\"admin_token\");\r\n\r\n    const response = await axios.get(\r\n      `${apiBaseUrl}/admin/galary/get/${pageNumber}/${pageLimit}`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    if (response.status === 200) {\r\n      return response;\r\n    } else {\r\n      throw new Error(response.message);\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      status: 400,\r\n      message: error.message,\r\n    };\r\n  }\r\n};\r\n\r\nexport const createSimpleImage = async (image) => {\r\n  try {\r\n    let token = localStorage.getItem(\"admin_token\");\r\n\r\n    const response = await axios.post(\r\n      `${apiBaseUrl}/admin/galary/createSimpleImage`,\r\n      image,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return {\r\n      status: 200,\r\n      message: response.data.message,\r\n      data: response.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      status: 400,\r\n      message: error.response.data.message,\r\n    };\r\n  }\r\n};\r\nexport const addImage = async (image) => {\r\n  try {\r\n    let token = localStorage.getItem(\"admin_token\");\r\n\r\n    const response = await axios.post(\r\n      `${apiBaseUrl}/admin/galary/create`,\r\n      image,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return {\r\n      status: 200,\r\n      message: response.data.message,\r\n      data: response.data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      status: 400,\r\n      message: error.response.data.message,\r\n    };\r\n  }\r\n};\r\n\r\n// export const deleteBlog = async (id) => {\r\n//   try {\r\n//     let token = localStorage.getItem(\"admin_token\");\r\n//     const response = await axios.delete(\r\n//       `${apiBaseUrl}/admin/blog/remove/${id}`,\r\n//       {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       }\r\n//     );\r\n//     return response;\r\n//   } catch (error) {\r\n//     return {\r\n//       status: 400,\r\n//       message: error.message,\r\n//     };\r\n//   }\r\n// };\r\n\r\n// export const getSearchBlog = async (pageNumber, pageLimit, searchValue) => {\r\n//   try {\r\n//     let token = localStorage.getItem(\"admin_token\");\r\n\r\n//     const response = await axios.get(\r\n//       `${apiBaseUrl}/admin/blog/search/${pageNumber}/${pageLimit}/${searchValue}`,\r\n//       {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       }\r\n//     );\r\n//     if (response.status === 200) {\r\n//       return response;\r\n//     } else {\r\n//       throw new Error(response.message);\r\n//     }\r\n//   } catch (error) {\r\n//     return {\r\n//       status: 400,\r\n//       message: error.message,\r\n//     };\r\n//   }\r\n// };\r\n\r\n// export const getBlogById = async (id) => {\r\n//   try {\r\n//     let token = localStorage.getItem(\"admin_token\");\r\n//     const response = await axios.get(\r\n//       `${apiBaseUrl}/admin/blog/byId/${id}`,\r\n\r\n//       {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       }\r\n//     );\r\n//     if (response.status === 200) {\r\n//       return response;\r\n//     } else {\r\n//       throw new Error(response.message);\r\n//     }\r\n//   } catch (error) {\r\n//     return {\r\n//       status: 400,\r\n//       message: error.message,\r\n//       data: \"\",\r\n//     };\r\n//   }\r\n// };\r\n\r\n// export const editBlog = async (id, obj) => {\r\n//   try {\r\n//     let token = localStorage.getItem(\"admin_token\");\r\n\r\n//     const response = await axios.put(\r\n//       `${apiBaseUrl}/admin/blog/edit/${id}`,\r\n//       obj,\r\n\r\n//       {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       }\r\n//     );\r\n//     if (response.status === 200) {\r\n//       return response;\r\n//     } else {\r\n//       throw new Error(response.message);\r\n//     }\r\n//   } catch (error) {\r\n//     return {\r\n//       status: 400,\r\n//       message: error.message,\r\n//     };\r\n//   }\r\n// };\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,OAAOC,UAAP,EAAmBC,SAAnB,KAAiC;EACvD,IAAI;IACF,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;IAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACpB,GAAER,UAAW,qBAAoBE,UAAW,IAAGC,SAAU,EADrC,EAErB;MACEM,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASN,KAAM;MAAjC;IADX,CAFqB,CAAvB;;IAMA,IAAIG,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;MAC3B,OAAOJ,QAAP;IACD,CAFD,MAEO;MACL,MAAM,IAAIK,KAAJ,CAAUL,QAAQ,CAACM,OAAnB,CAAN;IACD;EACF,CAdD,CAcE,OAAOC,KAAP,EAAc;IACd,OAAO;MACLH,MAAM,EAAE,GADH;MAELE,OAAO,EAAEC,KAAK,CAACD;IAFV,CAAP;EAID;AACF,CArBM;AAuBP,OAAO,MAAME,iBAAiB,GAAG,MAAOC,KAAP,IAAiB;EAChD,IAAI;IACF,IAAIZ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;IAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACkB,IAAN,CACpB,GAAEjB,UAAW,iCADO,EAErBgB,KAFqB,EAGrB;MACEP,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASN,KAAM;MAAjC;IADX,CAHqB,CAAvB;IAOA,OAAO;MACLO,MAAM,EAAE,GADH;MAELE,OAAO,EAAEN,QAAQ,CAACW,IAAT,CAAcL,OAFlB;MAGLK,IAAI,EAAEX,QAAQ,CAACW;IAHV,CAAP;EAKD,CAfD,CAeE,OAAOJ,KAAP,EAAc;IACd,OAAO;MACLH,MAAM,EAAE,GADH;MAELE,OAAO,EAAEC,KAAK,CAACP,QAAN,CAAeW,IAAf,CAAoBL;IAFxB,CAAP;EAID;AACF,CAtBM;AAuBP,OAAO,MAAMM,QAAQ,GAAG,MAAOH,KAAP,IAAiB;EACvC,IAAI;IACF,IAAIZ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;IAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACkB,IAAN,CACpB,GAAEjB,UAAW,sBADO,EAErBgB,KAFqB,EAGrB;MACEP,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASN,KAAM;MAAjC;IADX,CAHqB,CAAvB;IAOA,OAAO;MACLO,MAAM,EAAE,GADH;MAELE,OAAO,EAAEN,QAAQ,CAACW,IAAT,CAAcL,OAFlB;MAGLK,IAAI,EAAEX,QAAQ,CAACW;IAHV,CAAP;EAKD,CAfD,CAeE,OAAOJ,KAAP,EAAc;IACd,OAAO;MACLH,MAAM,EAAE,GADH;MAELE,OAAO,EAAEC,KAAK,CAACP,QAAN,CAAeW,IAAf,CAAoBL;IAFxB,CAAP;EAID;AACF,CAtBM,C,CAwBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}