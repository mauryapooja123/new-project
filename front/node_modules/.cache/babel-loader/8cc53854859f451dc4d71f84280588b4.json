{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Button, Table } from \"react-bootstrap\";\n// const CustomPagination = ({\n//   data,\n//   contentPerPage,\n//   handleDelete,\n//   handleEdit,\n// }) => {\n//   const [totalPageCount, setTotalPageCount] = useState(\n//     Math.ceil(data && data.length / contentPerPage)\n//   );\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [prevDisable, setPrevDisable] = useState(false);\n//   const [nextDisable, setNextDisable] = useState(false);\n//   const [records, setRecords] = useState([]);\n//   /* ðŸ‘‡ little UX tweak when user clicks on any button we scoll to top of the page */\n//   useEffect(() => {\n//     window.scrollTo({\n//       behavior: \"smooth\",\n//       top: \"0px\",\n//     });\n//   }, [currentPage]);\n//   function goToNextPage() {\n//     setCurrentPage((page) => page + 1);\n//   }\n//   function goToPreviousPage() {\n//     if (`${currentPage > 0}`) {\n//       setPrevDisable(true);\n//     }\n//     setCurrentPage((page) => page - 1);\n//   }\n//   const getPaginatedData = () => {\n//     const startIndex = currentPage * contentPerPage - contentPerPage;\n//     const endIndex = startIndex + contentPerPage;\n//     const d = data.slice(startIndex, endIndex);\n//     setRecords(d);\n//   };\n//   useEffect(() => {\n//     getPaginatedData();\n//   }, []);\n//   return (\n//     <>\n//       <div className=\"plan-table\">\n//         <h6\n//           style={{ float: \"right\", marginRight: \"50px\" }}\n//         >{`Page.no-${currentPage}`}</h6>\n//         <Table striped bordered hover responsive>\n//           <thead>\n//             <tr style={{ height: \"30px\" }}>\n//               <th>Id</th>\n//               <th>State</th>\n//               <th>Title</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {records &&\n//               records.length > 0 &&\n//               records.map((item, index) => (\n//                 <tr>\n//                   <td>{index + 1}</td>\n//                   <td>{item.state}</td>\n//                   <td>{item.title}</td>\n//                   <td>\n//                     <i\n//                       className=\"fa fa-edit\"\n//                       style={{\n//                         marginLeft: \"10px\",\n//                         cursor: \"pointer\",\n//                       }}\n//                       onClick={() => handleEdit(item)}\n//                     ></i>\n//                     <i\n//                       className=\"fa fa-trash\"\n//                       style={{\n//                         marginLeft: \"10px\",\n//                         cursor: \"pointer\",\n//                       }}\n//                       onClick={() => handleDelete(item._id)}\n//                     ></i>\n//                   </td>\n//                 </tr>\n//               ))}\n//           </tbody>\n//         </Table>\n//       </div>\n//       <div className=\"pagination\">\n//         {/* previous button */}\n//         <Button\n//           onClick={goToPreviousPage}\n//           variant={`${currentPage > 0 && \"primary\"}`}\n//           disabled={prevDisable}\n//           style={{ marginRight: \"10px\" }}\n//         >\n//           previous\n//         </Button>\n//         {/* next button */}\n//         <Button\n//           onClick={goToNextPage}\n//           variant={`${currentPage !== totalPageCount && \"info\"}`}\n//           disabled={nextDisable}\n//         >\n//           next\n//         </Button>\n//       </div>\n//     </>\n//   );\n// };\n// export default CustomPagination;","map":{"version":3,"names":[],"sources":["/home/webxpert/New_Project/front/src/react-pagination/CustomPagination.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Button, Table } from \"react-bootstrap\";\n\n// const CustomPagination = ({\n//   data,\n//   contentPerPage,\n//   handleDelete,\n//   handleEdit,\n// }) => {\n//   const [totalPageCount, setTotalPageCount] = useState(\n//     Math.ceil(data && data.length / contentPerPage)\n//   );\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [prevDisable, setPrevDisable] = useState(false);\n//   const [nextDisable, setNextDisable] = useState(false);\n//   const [records, setRecords] = useState([]);\n//   /* ðŸ‘‡ little UX tweak when user clicks on any button we scoll to top of the page */\n//   useEffect(() => {\n//     window.scrollTo({\n//       behavior: \"smooth\",\n//       top: \"0px\",\n//     });\n//   }, [currentPage]);\n\n//   function goToNextPage() {\n//     setCurrentPage((page) => page + 1);\n//   }\n//   function goToPreviousPage() {\n//     if (`${currentPage > 0}`) {\n//       setPrevDisable(true);\n//     }\n//     setCurrentPage((page) => page - 1);\n//   }\n\n//   const getPaginatedData = () => {\n//     const startIndex = currentPage * contentPerPage - contentPerPage;\n//     const endIndex = startIndex + contentPerPage;\n//     const d = data.slice(startIndex, endIndex);\n//     setRecords(d);\n//   };\n\n//   useEffect(() => {\n//     getPaginatedData();\n//   }, []);\n\n//   return (\n//     <>\n//       <div className=\"plan-table\">\n//         <h6\n//           style={{ float: \"right\", marginRight: \"50px\" }}\n//         >{`Page.no-${currentPage}`}</h6>\n//         <Table striped bordered hover responsive>\n//           <thead>\n//             <tr style={{ height: \"30px\" }}>\n//               <th>Id</th>\n//               <th>State</th>\n//               <th>Title</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {records &&\n//               records.length > 0 &&\n//               records.map((item, index) => (\n//                 <tr>\n//                   <td>{index + 1}</td>\n//                   <td>{item.state}</td>\n//                   <td>{item.title}</td>\n//                   <td>\n//                     <i\n//                       className=\"fa fa-edit\"\n//                       style={{\n//                         marginLeft: \"10px\",\n//                         cursor: \"pointer\",\n//                       }}\n//                       onClick={() => handleEdit(item)}\n//                     ></i>\n//                     <i\n//                       className=\"fa fa-trash\"\n//                       style={{\n//                         marginLeft: \"10px\",\n//                         cursor: \"pointer\",\n//                       }}\n//                       onClick={() => handleDelete(item._id)}\n//                     ></i>\n//                   </td>\n//                 </tr>\n//               ))}\n//           </tbody>\n//         </Table>\n//       </div>\n\n//       <div className=\"pagination\">\n//         {/* previous button */}\n//         <Button\n//           onClick={goToPreviousPage}\n//           variant={`${currentPage > 0 && \"primary\"}`}\n//           disabled={prevDisable}\n//           style={{ marginRight: \"10px\" }}\n//         >\n//           previous\n//         </Button>\n//         {/* next button */}\n//         <Button\n//           onClick={goToNextPage}\n//           variant={`${currentPage !== totalPageCount && \"info\"}`}\n//           disabled={nextDisable}\n//         >\n//           next\n//         </Button>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default CustomPagination;\n"],"mappings},"metadata":{},"sourceType":"module"}