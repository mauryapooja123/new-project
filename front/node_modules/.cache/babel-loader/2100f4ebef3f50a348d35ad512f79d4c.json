{"ast":null,"code":"var _jsxFileName = \"/home/webxpert/New_Project/front/src/pages/courseUnit/imageClickPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\"; // import \"./EditPopup.css\";\n// import * as courseServices from \"../services/courseServices\";\n\nimport _ from \"lodash\";\nimport { apiBaseUrl } from \"../../contants/constants\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { createNotification } from \"../../helper/notification\";\nimport { ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageClickPopup = props => {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [imgtag, setImgTag] = useState(\"\");\n\n  const handleClose = id => {\n    props.toggleModal(false);\n  };\n\n  useEffect(() => {\n    if (props.selectedItem) {\n      setId(props.selectedItem._id);\n      setUrl(`${apiBaseUrl}/uploads/Galary/${props.selectedItem && props.selectedItem.image}`);\n      let urlImage = `<img src=${'\"' + apiBaseUrl}/uploads/Galary/${props.selectedItem && props.selectedItem.image + '\"'}/>`;\n      setImgTag(urlImage);\n    }\n  }, [props.selectedItem]);\n\n  const ShowModal = () => {\n    props.showModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"image-input-popup\",\n      show: props.showModal,\n      onHide: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-input-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: `${apiBaseUrl}/uploads/Galary/${props.selectedItem && props.selectedItem.image}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              className: \"success-popup-notification\",\n              text: `${apiBaseUrl}/uploads/Galary/${props.selectedItem && props.selectedItem.image}`,\n              onCopy: () => createNotification(\"success\", \"Url copied successfully\"),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"copy-url btn\",\n                children: \"Copy Url\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-input-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: imgtag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              text: imgtag,\n              onCopy: () => createNotification(\"success\", \"Url with image tag copied successfully\"),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"copy-url btn\",\n                children: \"Copy Image tag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageClickPopup, \"L0fYNYuRnsoOtysQydU8poUS/Gk=\");\n\n_c = ImageClickPopup;\nexport default ImageClickPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageClickPopup\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","_","apiBaseUrl","CopyToClipboard","createNotification","ToastContainer","ImageClickPopup","props","id","setId","url","setUrl","imgtag","setImgTag","handleClose","toggleModal","selectedItem","_id","image","urlImage","ShowModal","showModal"],"sources":["/home/webxpert/New_Project/front/src/pages/courseUnit/imageClickPopup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n// import \"./EditPopup.css\";\r\n// import * as courseServices from \"../services/courseServices\";\r\nimport _ from \"lodash\";\r\nimport { apiBaseUrl } from \"../../contants/constants\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nimport { createNotification } from \"../../helper/notification\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst ImageClickPopup = (props) => {\r\n  const [id, setId] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [imgtag, setImgTag] = useState(\"\");\r\n\r\n  const handleClose = (id) => {\r\n    props.toggleModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.selectedItem) {\r\n      setId(props.selectedItem._id);\r\n      setUrl(\r\n        `${apiBaseUrl}/uploads/Galary/${\r\n          props.selectedItem && props.selectedItem.image\r\n        }`\r\n      );\r\n      let urlImage = `<img src=${'\"' + apiBaseUrl}/uploads/Galary/${\r\n        props.selectedItem && props.selectedItem.image + '\"'\r\n      }/>`;\r\n      setImgTag(urlImage);\r\n    }\r\n  }, [props.selectedItem]);\r\n  const ShowModal = () => {\r\n    props.showModal(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className=\"image-input-popup\"\r\n        show={props.showModal}\r\n        onHide={handleClose}\r\n      >\r\n        <div>\r\n          <Modal.Body>\r\n            <div className=\"image-input-wrap\">\r\n              <input\r\n                type=\"text\"\r\n                value={`${apiBaseUrl}/uploads/Galary/${\r\n                  props.selectedItem && props.selectedItem.image\r\n                }`}\r\n              />\r\n              <CopyToClipboard\r\n                className=\"success-popup-notification\"\r\n                text={`${apiBaseUrl}/uploads/Galary/${\r\n                  props.selectedItem && props.selectedItem.image\r\n                }`}\r\n                onCopy={() =>\r\n                  createNotification(\"success\", \"Url copied successfully\")\r\n                }\r\n              >\r\n                <Button className=\"copy-url btn\">Copy Url</Button>\r\n              </CopyToClipboard>\r\n            </div>\r\n            <div className=\"image-input-wrap\">\r\n              <input type=\"text\" value={imgtag} />\r\n              <CopyToClipboard\r\n                text={imgtag}\r\n                onCopy={() =>\r\n                  createNotification(\r\n                    \"success\",\r\n                    \"Url with image tag copied successfully\"\r\n                  )\r\n                }\r\n              >\r\n                <Button className=\"copy-url btn\">Copy Image tag</Button>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"info\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageClickPopup;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B,C,CACA;AACA;;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EAAA;;EACjC,MAAM,CAACC,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMiB,WAAW,GAAIN,EAAD,IAAQ;IAC1BD,KAAK,CAACQ,WAAN,CAAkB,KAAlB;EACD,CAFD;;EAIAjB,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,CAACS,YAAV,EAAwB;MACtBP,KAAK,CAACF,KAAK,CAACS,YAAN,CAAmBC,GAApB,CAAL;MACAN,MAAM,CACH,GAAET,UAAW,mBACZK,KAAK,CAACS,YAAN,IAAsBT,KAAK,CAACS,YAAN,CAAmBE,KAC1C,EAHG,CAAN;MAKA,IAAIC,QAAQ,GAAI,YAAW,MAAMjB,UAAW,mBAC1CK,KAAK,CAACS,YAAN,IAAsBT,KAAK,CAACS,YAAN,CAAmBE,KAAnB,GAA2B,GAClD,IAFD;MAGAL,SAAS,CAACM,QAAD,CAAT;IACD;EACF,CAbQ,EAaN,CAACZ,KAAK,CAACS,YAAP,CAbM,CAAT;;EAcA,MAAMI,SAAS,GAAG,MAAM;IACtBb,KAAK,CAACc,SAAN,CAAgB,KAAhB;EACD,CAFD;;EAGA,oBACE;IAAA,uBACE,QAAC,KAAD;MACE,SAAS,EAAC,mBADZ;MAEE,IAAI,EAAEd,KAAK,CAACc,SAFd;MAGE,MAAM,EAAEP,WAHV;MAAA,uBAKE;QAAA,wBACE,QAAC,KAAD,CAAO,IAAP;UAAA,wBACE;YAAK,SAAS,EAAC,kBAAf;YAAA,wBACE;cACE,IAAI,EAAC,MADP;cAEE,KAAK,EAAG,GAAEZ,UAAW,mBACnBK,KAAK,CAACS,YAAN,IAAsBT,KAAK,CAACS,YAAN,CAAmBE,KAC1C;YAJH;cAAA;cAAA;cAAA;YAAA,QADF,eAOE,QAAC,eAAD;cACE,SAAS,EAAC,4BADZ;cAEE,IAAI,EAAG,GAAEhB,UAAW,mBAClBK,KAAK,CAACS,YAAN,IAAsBT,KAAK,CAACS,YAAN,CAAmBE,KAC1C,EAJH;cAKE,MAAM,EAAE,MACNd,kBAAkB,CAAC,SAAD,EAAY,yBAAZ,CANtB;cAAA,uBASE,QAAC,MAAD;gBAAQ,SAAS,EAAC,cAAlB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YATF;cAAA;cAAA;cAAA;YAAA,QAPF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAoBE;YAAK,SAAS,EAAC,kBAAf;YAAA,wBACE;cAAO,IAAI,EAAC,MAAZ;cAAmB,KAAK,EAAEQ;YAA1B;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,eAAD;cACE,IAAI,EAAEA,MADR;cAEE,MAAM,EAAE,MACNR,kBAAkB,CAChB,SADgB,EAEhB,wCAFgB,CAHtB;cAAA,uBASE,QAAC,MAAD;gBAAQ,SAAS,EAAC,cAAlB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YATF;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QApBF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAoCE,QAAC,KAAD,CAAO,MAAP;UAAA,uBACE,QAAC,MAAD;YAAQ,OAAO,EAAC,MAAhB;YAAuB,OAAO,EAAEU,WAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QApCF;MAAA;QAAA;QAAA;QAAA;MAAA;IALF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoDD,CA9ED;;GAAMR,e;;KAAAA,e;AAgFN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}